#!/usr/bin/perl

use Test;
BEGIN { plan tests => 8}

$UNIX_SOCKET_NAME = "unix_test_socket";

$basedir = $0;  $basedir =~ s|(.*)/[^/]*|$1|;

# Just in case, remove any old files.
unlink $UNIX_SOCKET_NAME;

if (($pid = fork()) == 0) {
    $result = system "runas -t test_socket_base_t $basedir/unix_sink stream";
    exit;
}

sleep 1; # Need to slow down and give the server time to start...

# Check permissions for basic socket operations
$output = `runas -t test_socket_base_t -- $basedir/unix_options stream`;
&reformat_results($output, 0);

# Try to connect to the server from a domain that doesn't have connectto
# permission (this should fail).
$result = system "runas -t test_socket_noconnect_t -- $basedir/unix_source stream";
ok($result);

# Default policy allows domains to perform any access on 
# sockets that they created.
$result = system "runas -t test_socket_base_t -- $basedir/unix_source stream";
ok($result, 0);

unlink $UNIX_SOCKET_NAME;

if (($pid = fork()) == 0) {
    $result = system "runas -t test_socket_base_t $basedir/unix_sink udp";
    exit;
}

sleep 1; # Need to slow down and give the server time to start...

# Domain can't send messages socket; fails sendto check
$result = system "runas -t test_socket_none_t -- $basedir/unix_source udp";
ok($result);

$result = system "runas -t test_socket_base_t -- $basedir/unix_source udp";
ok($result, 0);
#print "test1: $result\n";

unlink $UNIX_SOCKET_NAME;

exit;

# ================================================================= #
# Miscellaneous Routines                                            #
# ================================================================= #
sub reformat_results {
	$list = shift;
	$expected = shift;
	for (split (' ', $list)) {
		ok($_, $expected);
	}
}
